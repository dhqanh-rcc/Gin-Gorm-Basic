basePath: /api/v1
definitions:
  db.Notes:
    properties:
      content:
        type: string
      createdAt:
        type: string
      note_id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  db.UpdateNoteRequest:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  db.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      passwordHash:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  notes.CreateNoteRequest:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  users.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  users.LoginRepsonse:
    properties:
      token:
        type: string
    type: object
  users.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: APIs in Go using Gin framework
  title: Notes Service API
  version: "1.0"
paths:
  /notes:
    get:
      consumes:
      - application/json
      description: Get all notes
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: pageSize
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Notes'
            type: array
      summary: Get all notes
      tags:
      - notes
  /notes/{note_id}:
    get:
      consumes:
      - application/json
      description: Get note by ID
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Notes'
      summary: Get note by ID
      tags:
      - notes
    put:
      consumes:
      - application/json
      description: Update note
      parameters:
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: integer
      - description: Note info
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/db.UpdateNoteRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Notes'
      summary: Update note
      tags:
      - notes
  /notes/create:
    post:
      consumes:
      - application/json
      description: Create a new note
      parameters:
      - description: Note info
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/notes.CreateNoteRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Notes'
        "401":
          description: unauthorized
          schema:
            type: string
      summary: Create a new note
      tags:
      - notes
  /notes/user:
    get:
      consumes:
      - application/json
      description: Get all notes of user
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Notes'
            type: array
      summary: Get all notes of user
      tags:
      - notes
  /user/create:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.User'
      summary: Create a new user
      tags:
      - users
  /user/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.LoginRepsonse'
      summary: Login user
      tags:
      - users
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
